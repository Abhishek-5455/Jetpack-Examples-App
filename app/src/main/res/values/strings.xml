<resources>
    <string name="app_name">Jet Tutorials</string>

    <string name="text_with_size">
        """
        Text(
            text = "Text with large size",
            fontSize = 30.sp
        )
        Text(
            text = "Text with small size",
            fontSize = 14.sp
        )
        """
    </string>
    <string name="text_with_color">
        """
        Text(
            text = "Text with red color",
            color = Color.Red
        )
        Text(
            text = "Text with green color",
            color = Color.Green
        )
        """
    </string>
    <string name="bold_text">
        """
        Text(
            text = "Bold text",
            fontWeight = FontWeight.Bold
        )
        """
    </string>
    <string name="italic_text">
        """
        Text(
            text = "Italic text",
            fontStyle = FontStyle.Italic
        )
        """
    </string>
    <string name="text_with_max_lines">
        """
        Text(
            text = "Long Text".repeat(30),
            maxLines = 2
        )
        """
    </string>
    <string name="text_with_overflow">
        """
        Text(
            text = "Text Overflow".repeat(30),
            maxLines = 2,
            overflow = TextOverflow.Ellipsis
        )
        """
    </string>


    <string name="simple_text_field">
        """
        TextField(
            value = "",
            onValueChange = {}
        )
        """
    </string>
    <string name="label_placeholder">
        """
        TextField(
            value = text,
            onValueChange = {
                text = it
            },
            label = { Text(text = "Your Label") },
            placeholder = { Text(text = "Your Placeholder/Hint") },
        )
        """
    </string>
    <string name="number_format">
        """
        TextField(
            value = text,
            label = { Text(text = "Number Input Type") },
            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),
            onValueChange = { it ->
                text = it
            }
        )
        """
    </string>
    <string name="outlined">
        """
        OutlinedTextField(
            value = text,
            label = { Text(text = "Enter Your Name") },
            onValueChange = {
                text = it
            }
        )
        """
    </string>
    <string name="textfield_with_icons">
        """
        OutlinedTextField(
            value = text,
            leadingIcon = { Icon(imageVector = Icons.Default.Email, contentDescription = null) },
            trailingIcon = { Icon(imageVector = Icons.Default.Add, contentDescription = null) },
            onValueChange = {
                text = it
            },
            label = { Text(text = "Email address") },
            placeholder = { Text(text = "Enter your e-mail") },
        """
    </string>
    <string name="simple_button">
        """
        Button(onClick = {
            //your onclick code here
        }) {
            Text(text = "Simple Button")
        }
        """
    </string>
    <string name="button_with_border">
        """
        Button(
            onClick = {
                //your onclick code
            },
            border = BorderStroke(1.dp, Color.Red),
            colors = ButtonDefaults.outlinedButtonColors(contentColor = Color.Red)
        ) {
            Text(text = "Button with border", color = Color.DarkGray)
        }
        """
    </string>
    <string name="button_with_elevation">
        """
        Button(onClick = {
            //your onclick code here
        },
        elevation =  ButtonDefaults.elevatedButtonElevation(
            defaultElevation = 10.dp,
            pressedElevation = 15.dp,
            disabledElevation = 0.dp
        )) {
            Text(text = "Button with elevation")
        }
        """
    </string>
    <string name="button_with_color">
        """
        Button(
            onClick = { },
            colors = ButtonDefaults.buttonColors(containerColor = Color.Gray)
        ) {
            Text(text = "Button with gray background",color = Color.White)
        }
        """
    </string>
    <string name="button_with_icon">
        """
        Button(onClick = {}) {

            Icon(
                imageVector = Icons.Rounded.Home,
                contentDescription = null
            )

            Text(text = "Add to cart",Modifier.padding(start = 10.dp))
        }
        """
    </string>
    <string name="button_with_shape">
        """
        Button(onClick = {}, shape = RectangleShape) {
            Text(text = "Rectangle shape")
        }

        Button(onClick = {}, shape = RoundedCornerShape(20.dp)) {
            Text(text = "Round corner shape")
        }

        Button(onClick = {}, shape = CutCornerShape(10)) {
            Text(text = "Cut corner shape")
        }
        """
    </string>


</resources>